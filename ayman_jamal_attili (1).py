# -*- coding: utf-8 -*-
"""Ayman Jamal Attili.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvOcm8L-pMunSm7SjlVX7h5liKSNMlAi
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import sklearn 
import seaborn as sns

data = pd.read_csv("/content/Iris.csv")

data.head()

data.describe()

data.info()

data.isnull().sum()

sns.scatterplot(x='SepalLengthCm', y='SepalWidthCm',hue='Species', data=data )
  
# Placing Legend outside the Figure
plt.legend(bbox_to_anchor=(1, 1), loc=2)
  
plt.show()

sns.countplot(x='Species', data=data )
plt.show()

sns.pairplot(data.drop(['Id'], axis = 1),hue='Species', height=2)

def graph(y):
    sns.boxplot(x="Species", y=y, data=data)
  
plt.figure(figsize=(10,10))
      
plt.subplot(221)
graph('SepalLengthCm')
  
plt.subplot(222)
graph('SepalWidthCm')
  
plt.subplot(223)
graph('PetalLengthCm')
  
plt.subplot(224)
graph('PetalWidthCm')
  
plt.show()

iris_train_splet = data.drop('Species',axis=1)
iris_train_splet = np.array(iris_train_splet)

from sklearn.cluster import KMeans
k_means = KMeans(n_clusters=3, random_state=0,) # Fixing the RNG in kmeans
k_means.fit(iris_train_splet)
y_pred = k_means.predict(iris_train_splet)

plt.scatter(iris_train_splet[:, 0], iris_train_splet[:, 1], c=y_pred)
plt.scatter(k_means.cluster_centers_[:, 0], k_means.cluster_centers_[:,1],s = 20, c = 'red', label = 'Centroids')
plt.legend()
plt.show()

y_pred